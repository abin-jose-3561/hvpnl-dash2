{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\20338783\\\\Desktop\\\\React\\\\hvpnl-dash\\\\hvpnl\\\\src\\\\components\\\\PieChart.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { Chart as ChartJs, Tooltip, Title, ArcElement, Legend } from 'chart.js';\nimport { Doughnut, Pie } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJs.register(Tooltip, Title, ArcElement, Legend);\nfunction PieChart() {\n  _s();\n  const [data, setData] = useState({\n    datasets: [{\n      data: [0, 0, 0, 0],\n      backgroundColor: ['red', 'blue', 'yellow', 'green']\n    }],\n    labels: ['0', '0', '0', '0']\n  });\n  useEffect(() => {\n    const fetchData = async () => {\n      const url = 'http://localhost:3001/tb';\n      const dataSet1 = [];\n      const dataSet2 = [];\n      const label = [];\n      await fetch(url).then(data => {\n        console.log(\"Api data\", data);\n        const res = data.json();\n        return res;\n      }).then(res => {\n        console.log(\"ressss\", res);\n        for (const val of res) {\n          dataSet1.push(val.ckt);\n          label.push(val.voltagelevel);\n          dataSet2.push(val.nolines);\n        }\n        setData({\n          labels: label,\n          datasets: [{\n            label: 'circuit km',\n            data: dataSet1,\n            backgroundColor: ['#aae6fa', '#aaccfa', '#aaacfa', '#aafaf7', '#d8aafa', '#faaacf']\n          }]\n        });\n        console.log(\"arrData\", dataSet1);\n      }).catch(e => {\n        console.log(\"error\", e);\n      });\n    };\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Doughnut, {\n    data: data\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 7\n  }, this);\n}\n_s(PieChart, \"vyF+mFi3yvDXx0Cb84GRRQyxIO0=\");\n_c = PieChart;\nexport default PieChart;\nvar _c;\n$RefreshReg$(_c, \"PieChart\");","map":{"version":3,"names":["useEffect","useState","Chart","ChartJs","Tooltip","Title","ArcElement","Legend","Doughnut","Pie","register","PieChart","data","setData","datasets","backgroundColor","labels","fetchData","url","dataSet1","dataSet2","label","fetch","then","console","log","res","json","val","push","ckt","voltagelevel","nolines","catch","e"],"sources":["C:/Users/20338783/Desktop/React/hvpnl-dash/hvpnl/src/components/PieChart.jsx"],"sourcesContent":["\r\nimport { useEffect,useState } from \"react\";\r\nimport {Chart as ChartJs, Tooltip, Title, ArcElement, Legend} from 'chart.js';\r\nimport { Doughnut, Pie } from 'react-chartjs-2';\r\nChartJs.register(\r\n  Tooltip, Title, ArcElement, Legend\r\n);\r\n\r\nfunction PieChart(){\r\n  const [data, setData] = useState({\r\n    datasets: [{\r\n      data: [0,0,0,0],\r\n        backgroundColor:[\r\n          'red',\r\n          'blue',\r\n          'yellow',\r\n          'green'\r\n        ]\r\n    },\r\n  ],\r\n  labels: [\r\n    '0',\r\n    '0',\r\n    '0',\r\n    '0'\r\n],\r\n});\r\n\r\n  useEffect(()=> {\r\n    const fetchData= async()=> {\r\n        const url = 'http://localhost:3001/tb'\r\n        const dataSet1 = [];\r\n        const dataSet2 = [];\r\n        const label=[];\r\n      await fetch(url).then((data)=> {\r\n          console.log(\"Api data\", data)\r\n          const res = data.json();\r\n          return res\r\n      }).then((res) => {\r\n          console.log(\"ressss\", res)\r\n         for (const val of res) {\r\n             dataSet1.push(val.ckt);\r\n             label.push(val.voltagelevel);\r\n             dataSet2.push(val.nolines);\r\n         }\r\n\r\n         setData({\r\n             labels:label,\r\n             datasets: [\r\n               {\r\n                 label: 'circuit km',\r\n                 data:dataSet1,\r\n                 backgroundColor:[\r\n                  '#aae6fa',\r\n                  '#aaccfa',\r\n                  '#aaacfa',\r\n                  '#aafaf7',\r\n                  '#d8aafa',\r\n                  '#faaacf',\r\n                ]\r\n               },\r\n\r\n             ],\r\n\r\n           })\r\n         console.log(\"arrData\", dataSet1)\r\n\r\n      }).catch(e => {\r\n\r\n             console.log(\"error\", e)\r\n\r\n         })\r\n        }\r\n         fetchData();\r\n        }, [])\r\n\r\n\r\n  return (\r\n      <Doughnut data={data}/>\r\n    \r\n    );\r\n\r\n}\r\n\r\nexport default PieChart;\r\n "],"mappings":";;AACA,SAASA,SAAS,EAACC,QAAQ,QAAQ,OAAO;AAC1C,SAAQC,KAAK,IAAIC,OAAO,EAAEC,OAAO,EAAEC,KAAK,EAAEC,UAAU,EAAEC,MAAM,QAAO,UAAU;AAC7E,SAASC,QAAQ,EAAEC,GAAG,QAAQ,iBAAiB;AAAC;AAChDN,OAAO,CAACO,QAAQ,CACdN,OAAO,EAAEC,KAAK,EAAEC,UAAU,EAAEC,MAAM,CACnC;AAED,SAASI,QAAQ,GAAE;EAAA;EACjB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC;IAC/Ba,QAAQ,EAAE,CAAC;MACTF,IAAI,EAAE,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC;MACbG,eAAe,EAAC,CACd,KAAK,EACL,MAAM,EACN,QAAQ,EACR,OAAO;IAEb,CAAC,CACF;IACDC,MAAM,EAAE,CACN,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG;EAEP,CAAC,CAAC;EAEAhB,SAAS,CAAC,MAAK;IACb,MAAMiB,SAAS,GAAE,YAAU;MACvB,MAAMC,GAAG,GAAG,0BAA0B;MACtC,MAAMC,QAAQ,GAAG,EAAE;MACnB,MAAMC,QAAQ,GAAG,EAAE;MACnB,MAAMC,KAAK,GAAC,EAAE;MAChB,MAAMC,KAAK,CAACJ,GAAG,CAAC,CAACK,IAAI,CAAEX,IAAI,IAAI;QAC3BY,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEb,IAAI,CAAC;QAC7B,MAAMc,GAAG,GAAGd,IAAI,CAACe,IAAI,EAAE;QACvB,OAAOD,GAAG;MACd,CAAC,CAAC,CAACH,IAAI,CAAEG,GAAG,IAAK;QACbF,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEC,GAAG,CAAC;QAC3B,KAAK,MAAME,GAAG,IAAIF,GAAG,EAAE;UACnBP,QAAQ,CAACU,IAAI,CAACD,GAAG,CAACE,GAAG,CAAC;UACtBT,KAAK,CAACQ,IAAI,CAACD,GAAG,CAACG,YAAY,CAAC;UAC5BX,QAAQ,CAACS,IAAI,CAACD,GAAG,CAACI,OAAO,CAAC;QAC9B;QAEAnB,OAAO,CAAC;UACJG,MAAM,EAACK,KAAK;UACZP,QAAQ,EAAE,CACR;YACEO,KAAK,EAAE,YAAY;YACnBT,IAAI,EAACO,QAAQ;YACbJ,eAAe,EAAC,CACf,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS;UAEZ,CAAC;QAIL,CAAC,CAAC;QACJS,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEN,QAAQ,CAAC;MAEnC,CAAC,CAAC,CAACc,KAAK,CAACC,CAAC,IAAI;QAEPV,OAAO,CAACC,GAAG,CAAC,OAAO,EAAES,CAAC,CAAC;MAE3B,CAAC,CAAC;IACH,CAAC;IACAjB,SAAS,EAAE;EACZ,CAAC,EAAE,EAAE,CAAC;EAGZ,oBACI,QAAC,QAAQ;IAAC,IAAI,EAAEL;EAAK;IAAA;IAAA;IAAA;EAAA,QAAE;AAI7B;AAAC,GA1EQD,QAAQ;AAAA,KAARA,QAAQ;AA4EjB,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}