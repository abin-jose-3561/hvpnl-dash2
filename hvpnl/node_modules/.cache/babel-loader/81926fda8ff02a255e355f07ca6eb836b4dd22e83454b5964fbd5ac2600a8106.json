{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\20338783\\\\Desktop\\\\React\\\\hvpnl-dash\\\\hvpnl\\\\src\\\\scenes\\\\damagedTransformer\\\\index.jsx\",\n  _s = $RefreshSig$();\nimport { Box } from \"@mui/material\";\nimport { DataGrid, GridToolbar } from \"@mui/x-data-grid\";\nimport { tokens } from \"../../theme\";\nimport { mockDataDamagetrans } from \"../../data/mockData\";\nimport Header from \"../../components/Header\";\nimport { useTheme } from \"@mui/material\";\nimport { ResponsiveBar } from \"@nivo/bar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DamagedTransformer = _ref => {\n  _s();\n  let {\n    isDashboard = false\n  } = _ref;\n  const theme = useTheme();\n  const colors = tokens(theme.palette.mode);\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      const url = 'http://localhost:3001/tb';\n      const dataSet1 = [];\n      const dataSet2 = [];\n      const label = [];\n      await fetch(url).then(data => {\n        console.log(\"Api data\", data);\n        const res = data.json();\n        return res;\n      }).then(res => {\n        console.log(\"ressss\", res);\n        for (const val of res) {\n          dataSet1.push(val.ckt);\n          label.push(val.voltagelevel);\n          dataSet2.push(val.nolines);\n        }\n        setData({\n          res\n        });\n      }).catch(e => {\n        console.log(\"error\", e);\n      });\n    };\n    fetchData();\n  }, []);\n  const columns = [{\n    field: \"voltagelevel\",\n    headerName: \"Voltage Level (KV)\",\n    flex: 2.5\n  }, {\n    field: \"ckt\",\n    headerName: \"Circuit (KM)\",\n    flex: 2.5\n  }, {\n    field: \"nolines\",\n    headerName: \"No of Lines\",\n    flex: 2.5\n  }];\n  return /*#__PURE__*/_jsxDEV(Box, {\n    m: \"20px\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      title: \"DAMAGED TRANSFORMER \",\n      subtitle: \"Damaged Transformer  Details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      height: \"65vh\",\n      width: \"auto\",\n      flex: \"auto\",\n      alignItems: \"center\",\n      alignContent: \"center\",\n      justifyContent: \"center\",\n      justifyItems: \"center\",\n      sx: {\n        \"& .MuiDataGrid-root\": {\n          border: \"none\",\n          justifyContent: \"center\"\n        },\n        \"& .MuiDataGrid-cell\": {\n          borderBottom: \"none\"\n        },\n        \"& .name-column--cell\": {\n          color: colors.greenAccent[300]\n        },\n        \"& .MuiDataGrid-columnHeaders\": {\n          backgroundColor: colors.blueAccent[700],\n          borderBottom: \"none\"\n        },\n        \"& .MuiDataGrid-virtualScroller\": {\n          backgroundColor: colors.primary[400]\n        },\n        \"& .MuiDataGrid-footerContainer\": {\n          borderTop: \"none\",\n          backgroundColor: colors.blueAccent[700]\n        },\n        \"& .MuiCheckbox-root\": {\n          color: `${colors.greenAccent[200]} !important`\n        },\n        \"& .MuiDataGrid-toolbarContainer .MuiButton-text\": {\n          color: `${colors.grey[100]} !important`\n        }\n      },\n      children: /*#__PURE__*/_jsxDEV(DataGrid, {\n        rows: data,\n        columns: columns,\n        components: {\n          Toolbar: GridToolbar\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(DamagedTransformer, \"r9pbf4dNo/K06DUCyAJgDvC7x7A=\", false, function () {\n  return [useTheme];\n});\n_c = DamagedTransformer;\nexport default DamagedTransformer;\nvar _c;\n$RefreshReg$(_c, \"DamagedTransformer\");","map":{"version":3,"names":["Box","DataGrid","GridToolbar","tokens","mockDataDamagetrans","Header","useTheme","ResponsiveBar","DamagedTransformer","isDashboard","theme","colors","palette","mode","data","setData","useState","useEffect","fetchData","url","dataSet1","dataSet2","label","fetch","then","console","log","res","json","val","push","ckt","voltagelevel","nolines","catch","e","columns","field","headerName","flex","border","justifyContent","borderBottom","color","greenAccent","backgroundColor","blueAccent","primary","borderTop","grey","Toolbar"],"sources":["C:/Users/20338783/Desktop/React/hvpnl-dash/hvpnl/src/scenes/damagedTransformer/index.jsx"],"sourcesContent":["import { Box } from \"@mui/material\";\r\nimport { DataGrid, GridToolbar } from \"@mui/x-data-grid\";\r\nimport { tokens } from \"../../theme\";\r\nimport { mockDataDamagetrans } from \"../../data/mockData\";\r\nimport Header from \"../../components/Header\";\r\nimport { useTheme } from \"@mui/material\";\r\nimport { ResponsiveBar } from \"@nivo/bar\";\r\n\r\nconst DamagedTransformer = ({isDashboard = false }) => {\r\n  const theme = useTheme();\r\n  const colors = tokens(theme.palette.mode);\r\n\r\n  const[data,setData] = useState([]);\r\n\r\n  useEffect(()=> {\r\n    const fetchData= async()=> {\r\n    const url = 'http://localhost:3001/tb'\r\n    const dataSet1 = [];\r\n    const dataSet2 = [];\r\n    const label=[];\r\n\r\n  await fetch(url).then((data)=> {\r\n      console.log(\"Api data\", data)\r\n      const res = data.json();\r\n      return res\r\n  }).then((res) => {\r\n      console.log(\"ressss\", res)\r\n     for (const val of res) {\r\n         dataSet1.push(val.ckt);\r\n         label.push(val.voltagelevel);\r\n         dataSet2.push(val.nolines);\r\n     }\r\n\r\n     setData({res})\r\n    }).catch(e => {\r\n\r\n      console.log(\"error\", e)\r\n\r\n  })\r\n }\r\n    fetchData();\r\n   }, [])\r\n\r\n\r\n  const columns = [\r\n    { field: \"voltagelevel\", headerName: \"Voltage Level (KV)\", flex: 2.5 },\r\n    { field: \"ckt\", headerName: \"Circuit (KM)\" , flex:2.5},\r\n    {\r\n      field: \"nolines\",\r\n      headerName: \"No of Lines\",\r\n      flex: 2.5,\r\n    },\r\n    \r\n  ];\r\n\r\n  return (\r\n    <Box m=\"20px\">\r\n      <Header\r\n        title=\"DAMAGED TRANSFORMER \"\r\n        subtitle=\"Damaged Transformer  Details\"\r\n      />\r\n      \r\n      <Box\r\n          height=\"65vh\"\r\n          width=\"auto\"\r\n          flex=\"auto\"\r\n          alignItems=\"center\"\r\n          alignContent=\"center\"\r\n          justifyContent=\"center\"\r\n          justifyItems=\"center\"\r\n          sx={{\r\n            \"& .MuiDataGrid-root\": {\r\n              border: \"none\",  justifyContent:\"center\",\r\n              \r\n            },\r\n            \"& .MuiDataGrid-cell\": {\r\n              borderBottom: \"none\", \r\n              \r\n            },\r\n            \"& .name-column--cell\": {\r\n              color: colors.greenAccent[300],\r\n            },\r\n            \"& .MuiDataGrid-columnHeaders\": {\r\n              backgroundColor: colors.blueAccent[700],\r\n              borderBottom: \"none\",\r\n            },\r\n            \"& .MuiDataGrid-virtualScroller\": {\r\n              backgroundColor: colors.primary[400],\r\n            },\r\n            \"& .MuiDataGrid-footerContainer\": {\r\n              borderTop: \"none\",\r\n              backgroundColor: colors.blueAccent[700],\r\n            },\r\n            \"& .MuiCheckbox-root\": {\r\n              color: `${colors.greenAccent[200]} !important`,\r\n              \r\n            },\r\n            \"& .MuiDataGrid-toolbarContainer .MuiButton-text\": {\r\n              color: `${colors.grey[100]} !important`,\r\n              \r\n            },\r\n          }}\r\n      >\r\n        <DataGrid\r\n          rows={data}\r\n          columns={columns}\r\n          components={{ Toolbar: GridToolbar }}\r\n          \r\n        />\r\n        {/* </Box>\r\n      <Box m=\"10px\">\r\n      <Header title=\"DAMAGED TRANSFORMERS\" subtitle=\"Analytics for Damaged Transformers\"/>\r\n      <Box height=\"75vh\">\r\n        <Box  display=\"grid\"\r\n            gridTemplateColumns=\"repeat(12, 1fr)\"\r\n            gridAutoRows=\"440px\"\r\n            gap=\"10px\">\r\n\r\n        <Box\r\n        gridColumn=\"span 6\"\r\n        display=\"flex\"\r\n        alignItems=\"center\"\r\n        justifyContent=\"center\"\r\n    >\r\n          <ResponsiveBar\r\n        data={mockDataDamagetrans}\r\n        theme={{\r\n          // added\r\n          axis: {\r\n            domain: {\r\n              line: {\r\n                stroke: colors.grey[100],\r\n              },\r\n            },\r\n            legend: {\r\n              text: {\r\n                fill: colors.grey[100],\r\n              },\r\n            },\r\n            ticks: {\r\n              line: {\r\n                stroke: colors.grey[100],\r\n                strokeWidth: 1,\r\n              },\r\n              text: {\r\n                fill: colors.grey[100],\r\n              },\r\n            },\r\n          },\r\n          legends: {\r\n            text: {\r\n              fill: colors.grey[100],\r\n            },\r\n          },\r\n        }}\r\n        keys={[\"TotalOutageT\"]}\r\n        indexBy=\"id\"\r\n        margin={{ top: 50, right: 130, bottom: 50, left: 60 }}\r\n        padding={0.3}\r\n        valueScale={{ type: \"linear\" }}\r\n        indexScale={{ type: \"band\", round: true }}\r\n        colors={{ scheme: \"nivo\" }}\r\n        defs={[\r\n          {\r\n            id: \"dots\",\r\n            type: \"patternDots\",\r\n            background: \"inherit\",\r\n            color: \"#38bcb2\",\r\n            size: 4,\r\n            padding: 1,\r\n            stagger: true,\r\n          },\r\n          {\r\n            id: \"lines\",\r\n            type: \"patternLines\",\r\n            background: \"inherit\",\r\n            color: \"#eed312\",\r\n            rotation: -45,\r\n            lineWidth: 6,\r\n            spacing: 10,\r\n          },\r\n        ]}\r\n        borderColor={{\r\n          from: \"color\",\r\n          modifiers: [[\"darker\", \"1.6\"]],\r\n        }}\r\n        axisTop={null}\r\n        axisRight={null}\r\n        axisBottom={{\r\n          tickSize: 5,\r\n          tickPadding: 5,\r\n          tickRotation: 0,\r\n          legend: isDashboard ? undefined : \"Circle\", // changed\r\n          legendPosition: \"middle\",\r\n          legendOffset: 32,\r\n        }}\r\n        axisLeft={{\r\n          tickSize: 5,\r\n          tickPadding: 5,\r\n          tickRotation: 0,\r\n          legend: isDashboard ? undefined : \"Damage Rate\", // changed\r\n          legendPosition: \"middle\",\r\n          legendOffset: -40,\r\n        }}\r\n        enableLabel={false}\r\n        labelSkipWidth={12}\r\n        labelSkipHeight={12}\r\n        labelTextColor={{\r\n          from: \"color\",\r\n          modifiers: [[\"darker\", 1.6]],\r\n        }}\r\n        legends={[\r\n          {\r\n            dataFrom: \"keys\",\r\n            anchor: \"bottom-right\",\r\n            direction: \"column\",\r\n            justify: false,\r\n            translateX: 120,\r\n            translateY: 0,\r\n            itemsSpacing: 2,\r\n            itemWidth: 100,\r\n            itemHeight: 20,\r\n            itemDirection: \"left-to-right\",\r\n            itemOpacity: 0.85,\r\n            symbolSize: 20,\r\n            effects: [\r\n              {\r\n                on: \"hover\",\r\n                style: {\r\n                  itemOpacity: 1,\r\n                },\r\n              },\r\n            ],\r\n          },\r\n        ]}\r\n        role=\"application\"\r\n        barAriaLabel={function (e) {\r\n          return e.id + \": \" + e.formattedValue + \" in country: \" + e.indexValue;\r\n        }}\r\n      />\r\n\r\n          </Box>\r\n          </Box>\r\n        </Box> */}\r\n      </Box>\r\n      </Box>\r\n  );\r\n};\r\n\r\nexport default DamagedTransformer;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}