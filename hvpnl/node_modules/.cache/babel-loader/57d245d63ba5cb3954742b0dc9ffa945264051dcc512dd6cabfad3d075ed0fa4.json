{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\20338783\\\\Desktop\\\\React\\\\hvpnl-dash\\\\hvpnl\\\\src\\\\scenes\\\\damagedTransformer\\\\index.jsx\",\n  _s = $RefreshSig$();\nimport { Box } from \"@mui/material\";\nimport { DataGrid, GridToolbar } from \"@mui/x-data-grid\";\nimport { tokens } from \"../../theme\";\nimport Header from \"../../components/Header\";\nimport { useTheme } from \"@mui/material\";\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Paper from '@mui/material/Paper';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TablePagination from '@mui/material/TablePagination';\nimport TableRow from '@mui/material/TableRow';\nimport { withStyles, makeStyles } from \"@mui/material/styles\";\n\n// const StyledTableCell = withStyles((theme) => ({\n//   head: {\n//     backgroundColor: theme.palette.common.black,\n//     color: theme.palette.common.white,\n//   },\n//   body: {\n//     fontSize: 14,\n//   },\n// }))(TableCell);\n\n// const StyledTableRow = withStyles((theme) => ({\n//   root: {\n//     \"&:nth-of-type(odd)\": {\n//       backgroundColor: theme.palette.action.hover,\n//     },\n//   },\n// }))(TableRow);\n\n// const useStyles = makeStyles({\n//   table: {\n//     minWidth: 700,\n//   },\n// });\n\n// const columns = [\n//   { field: \"voltagelevel\", headerName: \"Voltage Level (KV)\", flex: 2.5 },\n//   { field: \"ckt\", headerName: \"Circuit (KM)\" , flex:2.5},\n//   {\n//     field: \"nolines\",\n//     headerName: \"No of Lines\",\n//     flex: 2.5,\n//   }, \n// ];\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DamagedTransformer = () => {\n  _s();\n  const theme = useTheme();\n  const colors = tokens(theme.palette.mode);\n  // const classes = useStyles();\n\n  //   const[tableData,setTableData] = useState([]);\n  //   useEffect(()=> {\n  //     try {\n  //       const response = fetch(\"http://localhost:3001/tb\");\n  //       const jsonData = response.json();\n  //       console.log(jsonData);\n  //       setTableData(jsonData);\n  //     }catch(err){\n  //       console.error(err.message);\n  //     }\n  //   },[])\n  // console.log(tableData)\n  const [tableData, setTableData] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const gettb = async () => {\n    try {\n      const data = await axios.get(\"http://localhost:3001/tb\");\n      console.log(data.data);\n      setTableData(data.data);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n  useEffect(() => {\n    gettb();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    m: \"20px\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      title: \"DAMAGED TRANSFORMER \",\n      subtitle: \"Damaged Transformer  Details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \" Table Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Search here\",\n      onChange: e => {\n        setSearch(e.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), tableData.filter(item => {\n      if (search === \"\") {\n        return item;\n      } else if (item.voltagelevel.includes(search)) {\n        return item;\n      }\n    }).map(item => {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [item.voltagelevel, \"=\", item.ckt]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n};\n\n//          <StyledTableRow key={item.voltagelevel}>\n//                 <StyledTableCell component=\"th\" scope=\"row\">\n//                   {item.voltagelevel}\n//                 </StyledTableCell>\n//                 <StyledTableCell align=\"right\">\n//                   {item.ckt}\n//                 </StyledTableCell>\n//               </StyledTableRow>\n//             );\n//           })}\n//       </TableBody>\n//     </Table>\n//   </TableContainer>\n_s(DamagedTransformer, \"cWj4GC2TcUeQgLPddlxKtjtkx0w=\", false, function () {\n  return [useTheme];\n});\n_c = DamagedTransformer;\n{/* <DataGrid\r\n  rows={tableData}\r\n  columns={columns}\r\n  components={{ Toolbar: GridToolbar }}\r\n  \r\n /> */}\nexport default DamagedTransformer;\nvar _c;\n$RefreshReg$(_c, \"DamagedTransformer\");","map":{"version":3,"names":["Box","DataGrid","GridToolbar","tokens","Header","useTheme","useState","useEffect","axios","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","withStyles","makeStyles","DamagedTransformer","theme","colors","palette","mode","tableData","setTableData","search","setSearch","gettb","data","get","console","log","e","target","value","filter","item","voltagelevel","includes","map","ckt"],"sources":["C:/Users/20338783/Desktop/React/hvpnl-dash/hvpnl/src/scenes/damagedTransformer/index.jsx"],"sourcesContent":["import { Box } from \"@mui/material\";\r\nimport { DataGrid, GridToolbar } from \"@mui/x-data-grid\";\r\nimport { tokens } from \"../../theme\";\r\nimport Header from \"../../components/Header\";\r\nimport { useTheme } from \"@mui/material\";\r\nimport { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nimport Paper from '@mui/material/Paper';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TablePagination from '@mui/material/TablePagination';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport { withStyles, makeStyles } from \"@mui/material/styles\";\r\n\r\n// const StyledTableCell = withStyles((theme) => ({\r\n//   head: {\r\n//     backgroundColor: theme.palette.common.black,\r\n//     color: theme.palette.common.white,\r\n//   },\r\n//   body: {\r\n//     fontSize: 14,\r\n//   },\r\n// }))(TableCell);\r\n\r\n// const StyledTableRow = withStyles((theme) => ({\r\n//   root: {\r\n//     \"&:nth-of-type(odd)\": {\r\n//       backgroundColor: theme.palette.action.hover,\r\n//     },\r\n//   },\r\n// }))(TableRow);\r\n\r\n// const useStyles = makeStyles({\r\n//   table: {\r\n//     minWidth: 700,\r\n//   },\r\n// });\r\n\r\n// const columns = [\r\n//   { field: \"voltagelevel\", headerName: \"Voltage Level (KV)\", flex: 2.5 },\r\n//   { field: \"ckt\", headerName: \"Circuit (KM)\" , flex:2.5},\r\n//   {\r\n//     field: \"nolines\",\r\n//     headerName: \"No of Lines\",\r\n//     flex: 2.5,\r\n//   }, \r\n// ];\r\n\r\n\r\nconst DamagedTransformer = () => {\r\n  const theme = useTheme();\r\n  const colors = tokens(theme.palette.mode);\r\n  // const classes = useStyles();\r\n\r\n//   const[tableData,setTableData] = useState([]);\r\n//   useEffect(()=> {\r\n//     try {\r\n//       const response = fetch(\"http://localhost:3001/tb\");\r\n//       const jsonData = response.json();\r\n//       console.log(jsonData);\r\n//       setTableData(jsonData);\r\n//     }catch(err){\r\n//       console.error(err.message);\r\n//     }\r\n//   },[])\r\n// console.log(tableData)\r\nconst[tableData,setTableData] = useState([]);\r\nconst[search, setSearch] = useState(\"\");\r\n\r\nconst gettb= async () => {\r\ntry{\r\nconst data = await axios.get(\"http://localhost:3001/tb\");\r\nconsole.log(data.data);\r\nsetTableData(data.data);\r\n} catch (e) {\r\n  console.log(e);\r\n}\r\n};\r\nuseEffect(()=>{\r\n  gettb();\r\n},[]);\r\n\r\n\r\n  return (\r\n    <Box m=\"20px\">\r\n      <Header\r\n        title=\"DAMAGED TRANSFORMER \"\r\n        subtitle=\"Damaged Transformer  Details\"\r\n      />\r\n\r\n      <h3> Table Data</h3>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Search here\"\r\n        onChange={(e) => {\r\n          setSearch(e.target.value);\r\n        }}\r\n      />\r\n      \r\n     \r\n\r\n{/*  \r\n<TableContainer component={Paper}>\r\n        <Table className={classes.table} aria-label=\"customized table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <StyledTableCell>Voltage Level</StyledTableCell>\r\n              <StyledTableCell align=\"right\">CKT</StyledTableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody> */}\r\n\r\n      {tableData\r\n      .filter((item)=> {\r\n        if (search === \"\"){\r\n          return item;\r\n        } else if(\r\n          item.voltagelevel.includes(search)\r\n        ){\r\n          return item;\r\n        }\r\n      })\r\n     .map((item) =>{\r\n     return (\r\n          <p>\r\n            {item.voltagelevel}={item.ckt}\r\n          </p>\r\n        )\r\n      })}\r\n      </Box>\r\n    );\r\n  };\r\n\r\n\r\n    //          <StyledTableRow key={item.voltagelevel}>\r\n    //                 <StyledTableCell component=\"th\" scope=\"row\">\r\n    //                   {item.voltagelevel}\r\n    //                 </StyledTableCell>\r\n    //                 <StyledTableCell align=\"right\">\r\n    //                   {item.ckt}\r\n    //                 </StyledTableCell>\r\n    //               </StyledTableRow>\r\n    //             );\r\n    //           })}\r\n    //       </TableBody>\r\n    //     </Table>\r\n    //   </TableContainer>\r\n       \r\n    \r\n     \r\n        {/* <DataGrid\r\n          rows={tableData}\r\n          columns={columns}\r\n          components={{ Toolbar: GridToolbar }}\r\n          \r\n        /> */}\r\n       \r\n      \r\n\r\nexport default DamagedTransformer;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}