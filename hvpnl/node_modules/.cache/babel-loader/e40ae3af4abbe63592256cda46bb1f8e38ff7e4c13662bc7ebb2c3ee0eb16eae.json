{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\20338783\\\\Desktop\\\\React\\\\hvpnl-dash\\\\hvpnl\\\\src\\\\components\\\\LineChart.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { Chart as ChartJs, LineElement, CategoryScale, LinearScale, PointElement } from 'chart.js';\nimport { Line } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJs.register(LineElement, CategoryScale, LinearScale, PointElement);\nfunction LineChart() {\n  _s();\n  const [data, setData] = useState({\n    datasets: [{\n      data: [0, 0, 0, 0],\n      backgroundColor: ['red', 'blue', 'yellow', 'green']\n    }],\n    labels: ['0', '0', '0', '0']\n  });\n  useEffect(() => {\n    const fetchData = async () => {\n      const url = 'http://localhost:3001/tb';\n      const dataSet1 = [];\n      const dataSet2 = [];\n      const label = [];\n      await fetch(url).then(data => {\n        console.log(\"Api data\", data);\n        const res = data.json();\n        return res;\n      }).then(res => {\n        console.log(\"ressss\", res);\n        for (const val of res) {\n          dataSet1.push(val.ckt);\n          label.push(val.voltagelevel);\n          dataSet2.push(val.nolines);\n        }\n        setData({\n          labels: label,\n          datasets: [{\n            label: 'Total Circuit KM',\n            data: dataSet1,\n            backgroundColor: ['#7CFC00', '#32CD32', '#ADFF2F', '#2E8B57', '#d8aafa', '#faaacf']\n          }, {\n            label: 'Number of Lines',\n            data: dataSet2,\n            backgroundColor: ['#00BFFF', '#4682B4', '#aaacfa', '#aafaf7', '#8A2BE2', '#faaacf']\n          }]\n        });\n        console.log(\"arrData\", dataSet1);\n      }).catch(e => {\n        console.log(\"error\", e);\n      });\n    };\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Line, {\n    data: data\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 7\n  }, this);\n}\n_s(LineChart, \"vyF+mFi3yvDXx0Cb84GRRQyxIO0=\");\n_c = LineChart;\nexport default LineChart;\nvar _c;\n$RefreshReg$(_c, \"LineChart\");","map":{"version":3,"names":["useEffect","useState","Chart","ChartJs","LineElement","CategoryScale","LinearScale","PointElement","Line","register","LineChart","data","setData","datasets","backgroundColor","labels","fetchData","url","dataSet1","dataSet2","label","fetch","then","console","log","res","json","val","push","ckt","voltagelevel","nolines","catch","e"],"sources":["C:/Users/20338783/Desktop/React/hvpnl-dash/hvpnl/src/components/LineChart.jsx"],"sourcesContent":["\r\nimport { useEffect,useState } from \"react\";\r\nimport {Chart as ChartJs, LineElement, CategoryScale, LinearScale, PointElement} from 'chart.js';\r\nimport { Line } from 'react-chartjs-2';\r\nChartJs.register(\r\n    LineElement, \r\n    CategoryScale,\r\n    LinearScale, \r\n    PointElement\r\n);\r\n\r\nfunction LineChart(){\r\n  const [data, setData] = useState({\r\n    datasets: [{\r\n      data: [0,0,0,0],\r\n        backgroundColor:[\r\n          'red',\r\n          'blue',\r\n          'yellow',\r\n          'green'\r\n        ]\r\n    },\r\n  ],\r\n  labels: [\r\n    '0',\r\n    '0',\r\n    '0',\r\n    '0'\r\n],\r\n});\r\n\r\n  useEffect(()=> {\r\n    const fetchData= async()=> {\r\n        const url = 'http://localhost:3001/tb'\r\n        const dataSet1 = [];\r\n        const dataSet2 = [];\r\n        const label=[];\r\n      await fetch(url).then((data)=> {\r\n          console.log(\"Api data\", data)\r\n          const res = data.json();\r\n          return res\r\n      }).then((res) => {\r\n          console.log(\"ressss\", res)\r\n         for (const val of res) {\r\n             dataSet1.push(val.ckt);\r\n             label.push(val.voltagelevel);\r\n             dataSet2.push(val.nolines);\r\n         }\r\n\r\n         setData({\r\n             labels:label,\r\n             datasets: [\r\n               {\r\n                 label: 'Total Circuit KM',\r\n                 data:dataSet1,\r\n                 backgroundColor:[\r\n                  '#7CFC00',\r\n                  '#32CD32',\r\n                  '#ADFF2F',\r\n                  '#2E8B57',\r\n                  '#d8aafa',\r\n                  '#faaacf',\r\n                ]\r\n               },{\r\n                label: 'Number of Lines',\r\n                data:dataSet2,\r\n                backgroundColor:[\r\n                 '#00BFFF',\r\n                 '#4682B4',\r\n                 '#aaacfa',\r\n                 '#aafaf7',\r\n                 '#8A2BE2',\r\n                 '#faaacf',\r\n               ]\r\n              },\r\n\r\n             ],\r\n\r\n           })\r\n         console.log(\"arrData\", dataSet1)\r\n\r\n      }).catch(e => {\r\n\r\n             console.log(\"error\", e)\r\n\r\n         })\r\n        }\r\n         fetchData();\r\n        }, [])\r\n\r\n\r\n  return (\r\n      <Line data={data}/>\r\n    \r\n    );\r\n\r\n}\r\n\r\nexport default LineChart;\r\n "],"mappings":";;AACA,SAASA,SAAS,EAACC,QAAQ,QAAQ,OAAO;AAC1C,SAAQC,KAAK,IAAIC,OAAO,EAAEC,WAAW,EAAEC,aAAa,EAAEC,WAAW,EAAEC,YAAY,QAAO,UAAU;AAChG,SAASC,IAAI,QAAQ,iBAAiB;AAAC;AACvCL,OAAO,CAACM,QAAQ,CACZL,WAAW,EACXC,aAAa,EACbC,WAAW,EACXC,YAAY,CACf;AAED,SAASG,SAAS,GAAE;EAAA;EAClB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC;IAC/BY,QAAQ,EAAE,CAAC;MACTF,IAAI,EAAE,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC;MACbG,eAAe,EAAC,CACd,KAAK,EACL,MAAM,EACN,QAAQ,EACR,OAAO;IAEb,CAAC,CACF;IACDC,MAAM,EAAE,CACN,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG;EAEP,CAAC,CAAC;EAEAf,SAAS,CAAC,MAAK;IACb,MAAMgB,SAAS,GAAE,YAAU;MACvB,MAAMC,GAAG,GAAG,0BAA0B;MACtC,MAAMC,QAAQ,GAAG,EAAE;MACnB,MAAMC,QAAQ,GAAG,EAAE;MACnB,MAAMC,KAAK,GAAC,EAAE;MAChB,MAAMC,KAAK,CAACJ,GAAG,CAAC,CAACK,IAAI,CAAEX,IAAI,IAAI;QAC3BY,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEb,IAAI,CAAC;QAC7B,MAAMc,GAAG,GAAGd,IAAI,CAACe,IAAI,EAAE;QACvB,OAAOD,GAAG;MACd,CAAC,CAAC,CAACH,IAAI,CAAEG,GAAG,IAAK;QACbF,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEC,GAAG,CAAC;QAC3B,KAAK,MAAME,GAAG,IAAIF,GAAG,EAAE;UACnBP,QAAQ,CAACU,IAAI,CAACD,GAAG,CAACE,GAAG,CAAC;UACtBT,KAAK,CAACQ,IAAI,CAACD,GAAG,CAACG,YAAY,CAAC;UAC5BX,QAAQ,CAACS,IAAI,CAACD,GAAG,CAACI,OAAO,CAAC;QAC9B;QAEAnB,OAAO,CAAC;UACJG,MAAM,EAACK,KAAK;UACZP,QAAQ,EAAE,CACR;YACEO,KAAK,EAAE,kBAAkB;YACzBT,IAAI,EAACO,QAAQ;YACbJ,eAAe,EAAC,CACf,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS;UAEZ,CAAC,EAAC;YACDM,KAAK,EAAE,iBAAiB;YACxBT,IAAI,EAACQ,QAAQ;YACbL,eAAe,EAAC,CACf,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS;UAEZ,CAAC;QAIJ,CAAC,CAAC;QACJS,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEN,QAAQ,CAAC;MAEnC,CAAC,CAAC,CAACc,KAAK,CAACC,CAAC,IAAI;QAEPV,OAAO,CAACC,GAAG,CAAC,OAAO,EAAES,CAAC,CAAC;MAE3B,CAAC,CAAC;IACH,CAAC;IACAjB,SAAS,EAAE;EACZ,CAAC,EAAE,EAAE,CAAC;EAGZ,oBACI,QAAC,IAAI;IAAC,IAAI,EAAEL;EAAK;IAAA;IAAA;IAAA;EAAA,QAAE;AAIzB;AAAC,GArFQD,SAAS;AAAA,KAATA,SAAS;AAuFlB,eAAeA,SAAS;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}