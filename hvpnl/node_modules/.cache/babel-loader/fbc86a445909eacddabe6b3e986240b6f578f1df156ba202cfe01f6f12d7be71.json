{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\20338783\\\\Desktop\\\\React\\\\hvpnl-dash\\\\hvpnl\\\\src\\\\scenes\\\\damagedTransformer\\\\index.jsx\",\n  _s = $RefreshSig$();\nimport { TableHead } from \"@mui/material\";\nimport axios from \"axios\";\nimport React, { useEffect, useMemo, useState } from \"react\";\nimport { useTable } from \"react-table\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DamagedTransformer(props) {\n  _s();\n  const [products, setProducts] = useState([]);\n  const fetchProducts = async () => {\n    const response = await axios.get(\"http://localhost:3001/tb\").catch(err => console.log(err));\n    if (response) {\n      const products = response.data;\n      console.log(\"Products: \", products);\n      setProducts(products);\n    }\n  };\n  useEffect(() => {\n    fetchProducts();\n  }, []);\n  const data = useMemo(() => [{\n    \"voltagelevel\": 132,\n    \"ckt\": 5138,\n    \"nolines\": 341,\n    \"userId\": \"1\"\n  }, {\n    \"voltagelevel\": 220,\n    \"ckt\": 6028,\n    \"nolines\": 230,\n    \"userId\": \"1\"\n  }]);\n  const columns = useMemo(() => [{\n    Header: \"VOLTAGE\",\n    accessor: \"voltagelevel\"\n  }, {\n    Header: \"CKT\",\n    accessor: \"ckt\"\n  }, {\n    Header: \"NO Lines\",\n    accessor: \"nolines\"\n  }]);\n  const tableInstance = useTable({\n    columns,\n    data\n  });\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = tableInstance;\n  return /*#__PURE__*/_jsxDEV(Table, {\n    ...getTableProps(),\n    children: [/*#__PURE__*/_jsxDEV(TableHead, {\n      children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(TableRow, {\n        ...headerGroup.getHeaderGroupProps(),\n        children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(TableHeader, {\n          ...column.getHeaderProps(),\n          children: column.render(\"Header\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n      ...getTableBodyProps(),\n      children: rows.map(row => {\n        prepareRow(row);\n        return row.cells.map((cell, idx) => /*#__PURE__*/_jsxDEV(TableData, {\n          ...cell.getCellProps(),\n          children: cell.render(\"Cell\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this));\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 8\n  }, this);\n}\n_s(DamagedTransformer, \"9ttPweh8ssDXr2NtiFgpf8vKxuA=\", false, function () {\n  return [useTable];\n});\n_c = DamagedTransformer;\nexport default DamagedTransformer;\nvar _c;\n$RefreshReg$(_c, \"DamagedTransformer\");","map":{"version":3,"names":["TableHead","axios","React","useEffect","useMemo","useState","useTable","DamagedTransformer","props","products","setProducts","fetchProducts","response","get","catch","err","console","log","data","columns","Header","accessor","tableInstance","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","row","cells","cell","idx","getCellProps"],"sources":["C:/Users/20338783/Desktop/React/hvpnl-dash/hvpnl/src/scenes/damagedTransformer/index.jsx"],"sourcesContent":["import { TableHead } from \"@mui/material\";\r\nimport axios from \"axios\";\r\nimport React, { useEffect, useMemo, useState } from \"react\";\r\nimport {useTable } from \"react-table\";\r\n\r\n\r\nfunction DamagedTransformer(props) {\r\n  const [products, setProducts] = useState([]);\r\n\r\n  const fetchProducts = async () => {\r\n    const response = await axios\r\n      .get(\"http://localhost:3001/tb\")\r\n      .catch((err) => console.log(err));\r\n\r\n    if (response) {\r\n      const products = response.data;\r\n\r\n      console.log(\"Products: \", products);\r\n      setProducts(products);\r\n    }\r\n  };\r\n  useEffect(()=>{\r\n  fetchProducts();\r\n},[]);\r\n\r\nconst data = useMemo(()=> (\r\n[\r\n  {\"voltagelevel\":132,\"ckt\":5138,\"nolines\":341,\"userId\":\"1\"},\r\n  {\"voltagelevel\":220,\"ckt\":6028,\"nolines\":230,\"userId\":\"1\"},\r\n]));\r\n\r\nconst columns = useMemo(()=>([\r\n  {\r\n    Header:\"VOLTAGE\",\r\n    accessor: \"voltagelevel\"\r\n  },\r\n  {\r\n    Header:\"CKT\",\r\n    accessor: \"ckt\"\r\n  },\r\n  {\r\n    Header:\"NO Lines\",\r\n    accessor: \"nolines\"\r\n  },\r\n]));\r\n\r\nconst tableInstance =useTable({columns,data});\r\nconst { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow}=tableInstance;\r\n\r\nreturn <Table {...getTableProps()}>\r\n  <TableHead>\r\n      {headerGroups.map((headerGroup) => (\r\n            <TableRow {...headerGroup.getHeaderGroupProps()}>\r\n              {headerGroup.headers.map((column) => (\r\n                <TableHeader\r\n                  {...column.getHeaderProps()}>{column.render(\"Header\") }</TableHeader>\r\n              ))}\r\n              </TableRow>\r\n      ))}\r\n  </TableHead>\r\n  <TableBody {...getTableBodyProps()}>\r\n                {rows.map((row)=>{\r\n                  prepareRow(row);\r\n\r\n                  return row.cells.map((cell, idx) =>(\r\n                    <TableData {...cell.getCellProps()}>\r\n                    {cell.render(\"Cell\")}\r\n                  </TableData>\r\n                  ))\r\n                })}\r\n\r\n  </TableBody>\r\n</Table>\r\n}\r\n\r\nexport default DamagedTransformer;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}