{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\20338783\\\\Desktop\\\\React\\\\hvpnl-dash\\\\hvpnl\\\\src\\\\components\\\\BarChart.jsx\",\n  _s = $RefreshSig$();\nimport { Box } from '@mui/material';\nimport { useEffect, useState } from 'react';\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js';\nimport { Bar } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\nconst options = {\n  axis: 'x',\n  elements: {\n    bar: {\n      borderWidth: 2\n    }\n  },\n  scales: {\n    x: {\n      title: {\n        display: true,\n        text: 'Voltage Level'\n      }\n    }\n  },\n  responsive: true,\n  plugins: {\n    legend: {\n      position: 'top',\n      display: true\n    }\n  }\n};\n\n// const options2 = {\n//   axis: 'x',\n//   elements: {\n//     bar: {\n//       borderWidth: 2,\n//     },\n//   },\n//   scales: {x: { title: { display: true, text: 'Voltage Level' }}, y: { title: { display: true, text: 'Number of Lines' }}},\n//   responsive: true,\n//   plugins: {\n//     legend: {\n//       position: 'top',\n//       display: true\n//     },\n//   },\n// };\n\nconst BarChart = () => {\n  _s();\n  const [data, setData] = useState({\n    datasets: [{\n      label: 'Dataset 1',\n      data: [],\n      borderColor: 'rgb(258, 99, 132)',\n      backgroundColor: 'rgba(25, 190, 130)'\n    }]\n  });\n\n  // const [data2, setData2] = useState({\n  //   datasets: [\n  //     {\n  //       label: 'Dataset 2',\n  //       data:[],\n  //       borderColor: 'rgb(258, 199, 132)',\n  //       backgroundColor: 'rgba(25, 190, 130)',\n\n  //     },\n\n  //   ],\n\n  // });\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const url = 'http://localhost:3001/tb';\n      const dataSet1 = [];\n      const dataSet2 = [];\n      const label = [];\n      await fetch(url).then(data => {\n        console.log(\"Api data\", data);\n        const res = data.json();\n        return res;\n      }).then(res => {\n        console.log(\"ressss\", res);\n        for (const val of res) {\n          dataSet1.push(val.ckt);\n          label.push(val.voltagelevel);\n          dataSet2.push(val.nolines);\n        }\n        setData({\n          labels: label,\n          datasets: [{\n            label: 'Circuit KM',\n            data: dataSet1,\n            borderColor: 'rgb(258, 199, 132)',\n            backgroundColor: 'rgba(25, 190, 130)',\n            size: 4,\n            padding: 1\n          }, {\n            label: 'No. of Lines',\n            data: dataSet2,\n            borderColor: 'rgb(258, 199, 132)',\n            backgroundColor: 'rgba(255, 92, 185,1)',\n            size: 4,\n            padding: 1\n          }]\n        });\n        console.log(\"arrData\", dataSet2);\n      }).catch(e => {\n        console.log(\"error\", e);\n      });\n    };\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    mt: \"-40\",\n    display: \"grid\",\n    gridTemplateColumns: \"repeat(12, 1fr)\",\n    gridAutoRows: \"440px\",\n    gap: \"10px\",\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      gridColumn: \"span 10\",\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      children: /*#__PURE__*/_jsxDEV(Bar, {\n        data: data,\n        options: options\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 1\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 3\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 7\n  }, this);\n};\n_s(BarChart, \"eGKUfAo3VgTQ/bDH2sgTSPOibhc=\");\n_c = BarChart;\nexport default BarChart;\nvar _c;\n$RefreshReg$(_c, \"BarChart\");","map":{"version":3,"names":["Box","useEffect","useState","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","Bar","register","options","axis","elements","bar","borderWidth","scales","x","title","display","text","responsive","plugins","legend","position","BarChart","data","setData","datasets","label","borderColor","backgroundColor","fetchData","url","dataSet1","dataSet2","fetch","then","console","log","res","json","val","push","ckt","voltagelevel","nolines","labels","size","padding","catch","e"],"sources":["C:/Users/20338783/Desktop/React/hvpnl-dash/hvpnl/src/components/BarChart.jsx"],"sourcesContent":["import { Box } from '@mui/material';\r\nimport {useEffect, useState} from 'react';\r\nimport {\r\n    Chart as ChartJS,\r\n    CategoryScale,\r\n    LinearScale,\r\n    BarElement,\r\n    Title,\r\n    Tooltip,\r\n    Legend,\r\n  } from 'chart.js';\r\n\r\nimport { Bar } from 'react-chartjs-2';\r\n\r\nChartJS.register(\r\n    CategoryScale,\r\n    LinearScale,\r\n    BarElement,\r\n    Title,\r\n    Tooltip,\r\n    Legend\r\n  );\r\n\r\nconst options = {\r\n    axis: 'x',\r\n    elements: {\r\n      bar: {\r\n        borderWidth: 2,\r\n      },\r\n    },\r\n    scales: { x: { title: { display: true, text: 'Voltage Level' }}},\r\n    responsive: true,\r\n    plugins: {\r\n      legend: {\r\n        position: 'top',\r\n        display: true\r\n      },\r\n    },\r\n  };\r\n\r\n  // const options2 = {\r\n  //   axis: 'x',\r\n  //   elements: {\r\n  //     bar: {\r\n  //       borderWidth: 2,\r\n  //     },\r\n  //   },\r\n  //   scales: {x: { title: { display: true, text: 'Voltage Level' }}, y: { title: { display: true, text: 'Number of Lines' }}},\r\n  //   responsive: true,\r\n  //   plugins: {\r\n  //     legend: {\r\n  //       position: 'top',\r\n  //       display: true\r\n  //     },\r\n  //   },\r\n  // };\r\n\r\n\r\n\r\nconst BarChart =() => {\r\n    const [data, setData] = useState({\r\n        datasets: [\r\n          {\r\n            label: 'Dataset 1',\r\n            data:[],\r\n            borderColor: 'rgb(258, 99, 132)',\r\n            backgroundColor: 'rgba(25, 190, 130)',\r\n          },\r\n\r\n\r\n\r\n        ],\r\n      });\r\n\r\n\r\n      // const [data2, setData2] = useState({\r\n      //   datasets: [\r\n      //     {\r\n      //       label: 'Dataset 2',\r\n      //       data:[],\r\n      //       borderColor: 'rgb(258, 199, 132)',\r\n      //       backgroundColor: 'rgba(25, 190, 130)',\r\n\r\n      //     },\r\n\r\n        \r\n      //   ],\r\n\r\n      // });\r\n\r\n    useEffect(()=> {\r\n       const fetchData= async()=> {\r\n           const url = 'http://localhost:3001/tb'\r\n           const dataSet1 = [];\r\n           const dataSet2 = [];\r\n           const label=[];\r\n         await fetch(url).then((data)=> {\r\n             console.log(\"Api data\", data)\r\n             const res = data.json();\r\n             return res\r\n         }).then((res) => {\r\n             console.log(\"ressss\", res)\r\n            for (const val of res) {\r\n                dataSet1.push(val.ckt);\r\n                label.push(val.voltagelevel);\r\n                dataSet2.push(val.nolines);\r\n            }\r\n\r\n          setData({\r\n            labels:label,\r\n            datasets: [\r\n              {\r\n                label: 'Circuit KM',\r\n                data:dataSet1,\r\n                borderColor: 'rgb(258, 199, 132)',\r\n                backgroundColor: 'rgba(25, 190, 130)',\r\n                size:4,\r\n                padding:1,\r\n              },\r\n              {\r\n                label: 'No. of Lines',\r\n                data:dataSet2,\r\n                borderColor: 'rgb(258, 199, 132)',\r\n                backgroundColor: 'rgba(255, 92, 185,1)',\r\n                size:4,\r\n                padding:1,\r\n              },\r\n            ],\r\n          })\r\n        console.log(\"arrData\", dataSet2)\r\n         }).catch(e => {\r\n                console.log(\"error\", e)\r\n            })\r\n        }\r\n        fetchData();          \r\n    },[])\r\n\r\n\r\n    return(\r\n      <Box mt='-40' display=\"grid\"\r\n      gridTemplateColumns=\"repeat(12, 1fr)\"\r\n      gridAutoRows=\"440px\"\r\n      gap=\"10px\">\r\n\r\n  <Box\r\n  gridColumn=\"span 10\"\r\n  display=\"flex\"\r\n  alignItems=\"center\"\r\n  justifyContent=\"center\"\r\n\r\n>\r\n<Bar data={data} options={options}/>\r\n   \r\n  </Box>\r\n      {/* <Box\r\n\r\n          gridColumn=\"span 6\"\r\n          display=\"flex\"\r\n          alignItems=\"center\"\r\n          justifyContent=\"center\"\r\n        >\r\n        <Bar data={data2} options={options2}/>\r\n      </Box>  */}\r\n      </Box>\r\n       )\r\n  }\r\nexport default BarChart;"],"mappings":";;AAAA,SAASA,GAAG,QAAQ,eAAe;AACnC,SAAQC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AACzC,SACIC,KAAK,IAAIC,OAAO,EAChBC,aAAa,EACbC,WAAW,EACXC,UAAU,EACVC,KAAK,EACLC,OAAO,EACPC,MAAM,QACD,UAAU;AAEnB,SAASC,GAAG,QAAQ,iBAAiB;AAAC;AAEtCP,OAAO,CAACQ,QAAQ,CACZP,aAAa,EACbC,WAAW,EACXC,UAAU,EACVC,KAAK,EACLC,OAAO,EACPC,MAAM,CACP;AAEH,MAAMG,OAAO,GAAG;EACZC,IAAI,EAAE,GAAG;EACTC,QAAQ,EAAE;IACRC,GAAG,EAAE;MACHC,WAAW,EAAE;IACf;EACF,CAAC;EACDC,MAAM,EAAE;IAAEC,CAAC,EAAE;MAAEC,KAAK,EAAE;QAAEC,OAAO,EAAE,IAAI;QAAEC,IAAI,EAAE;MAAgB;IAAC;EAAC,CAAC;EAChEC,UAAU,EAAE,IAAI;EAChBC,OAAO,EAAE;IACPC,MAAM,EAAE;MACNC,QAAQ,EAAE,KAAK;MACfL,OAAO,EAAE;IACX;EACF;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIF,MAAMM,QAAQ,GAAE,MAAM;EAAA;EAClB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAG3B,QAAQ,CAAC;IAC7B4B,QAAQ,EAAE,CACR;MACEC,KAAK,EAAE,WAAW;MAClBH,IAAI,EAAC,EAAE;MACPI,WAAW,EAAE,mBAAmB;MAChCC,eAAe,EAAE;IACnB,CAAC;EAKL,CAAC,CAAC;;EAGF;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;;EAGA;;EAEA;;EAEFhC,SAAS,CAAC,MAAK;IACZ,MAAMiC,SAAS,GAAE,YAAU;MACvB,MAAMC,GAAG,GAAG,0BAA0B;MACtC,MAAMC,QAAQ,GAAG,EAAE;MACnB,MAAMC,QAAQ,GAAG,EAAE;MACnB,MAAMN,KAAK,GAAC,EAAE;MAChB,MAAMO,KAAK,CAACH,GAAG,CAAC,CAACI,IAAI,CAAEX,IAAI,IAAI;QAC3BY,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEb,IAAI,CAAC;QAC7B,MAAMc,GAAG,GAAGd,IAAI,CAACe,IAAI,EAAE;QACvB,OAAOD,GAAG;MACd,CAAC,CAAC,CAACH,IAAI,CAAEG,GAAG,IAAK;QACbF,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEC,GAAG,CAAC;QAC3B,KAAK,MAAME,GAAG,IAAIF,GAAG,EAAE;UACnBN,QAAQ,CAACS,IAAI,CAACD,GAAG,CAACE,GAAG,CAAC;UACtBf,KAAK,CAACc,IAAI,CAACD,GAAG,CAACG,YAAY,CAAC;UAC5BV,QAAQ,CAACQ,IAAI,CAACD,GAAG,CAACI,OAAO,CAAC;QAC9B;QAEFnB,OAAO,CAAC;UACNoB,MAAM,EAAClB,KAAK;UACZD,QAAQ,EAAE,CACR;YACEC,KAAK,EAAE,YAAY;YACnBH,IAAI,EAACQ,QAAQ;YACbJ,WAAW,EAAE,oBAAoB;YACjCC,eAAe,EAAE,oBAAoB;YACrCiB,IAAI,EAAC,CAAC;YACNC,OAAO,EAAC;UACV,CAAC,EACD;YACEpB,KAAK,EAAE,cAAc;YACrBH,IAAI,EAACS,QAAQ;YACbL,WAAW,EAAE,oBAAoB;YACjCC,eAAe,EAAE,sBAAsB;YACvCiB,IAAI,EAAC,CAAC;YACNC,OAAO,EAAC;UACV,CAAC;QAEL,CAAC,CAAC;QACJX,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEJ,QAAQ,CAAC;MAC/B,CAAC,CAAC,CAACe,KAAK,CAACC,CAAC,IAAI;QACPb,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEY,CAAC,CAAC;MAC3B,CAAC,CAAC;IACN,CAAC;IACDnB,SAAS,EAAE;EACf,CAAC,EAAC,EAAE,CAAC;EAGL,oBACE,QAAC,GAAG;IAAC,EAAE,EAAC,KAAK;IAAC,OAAO,EAAC,MAAM;IAC5B,mBAAmB,EAAC,iBAAiB;IACrC,YAAY,EAAC,OAAO;IACpB,GAAG,EAAC,MAAM;IAAA,uBAEd,QAAC,GAAG;MACJ,UAAU,EAAC,SAAS;MACpB,OAAO,EAAC,MAAM;MACd,UAAU,EAAC,QAAQ;MACnB,cAAc,EAAC,QAAQ;MAAA,uBAGzB,QAAC,GAAG;QAAC,IAAI,EAAEN,IAAK;QAAC,OAAO,EAAEf;MAAQ;QAAA;QAAA;QAAA;MAAA;IAAE;MAAA;MAAA;MAAA;IAAA;EAE5B;IAAA;IAAA;IAAA;EAAA,QAUI;AAEV,CAAC;AAAA,GA1GGc,QAAQ;AAAA,KAARA,QAAQ;AA2Gd,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}