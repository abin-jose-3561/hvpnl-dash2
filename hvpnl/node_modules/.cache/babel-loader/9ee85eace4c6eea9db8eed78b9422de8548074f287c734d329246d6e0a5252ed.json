{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\20338783\\\\Desktop\\\\React\\\\hvpnl-dash\\\\hvpnl\\\\src\\\\components\\\\BarChart.jsx\",\n  _s = $RefreshSig$();\nimport { useTheme } from \"@mui/material\";\nimport { ResponsiveBar } from \"@nivo/bar\";\nimport { tokens } from \"../theme\";\nimport { mockData as data } from \"../data/mockData\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BarChart = _ref => {\n  _s();\n  let {\n    isDashboard = false\n  } = _ref;\n  const theme = useTheme();\n  const colors = tokens(theme.palette.mode);\n  const [tbs, settbs] = useState([]);\n  const gettb = async () => {\n    try {\n      const response = await fetch(\"http://localhost:3001/tb\");\n      const jsonData = await response.json();\n      settbs(jsonData);\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n  useEffect(() => {\n    gettb();\n  }, []);\n  console.log(tbs);\n  return /*#__PURE__*/_jsxDEV(ResponsiveBar, {\n    data: data,\n    theme: {\n      // added\n      axis: {\n        domain: {\n          line: {\n            stroke: colors.grey[100]\n          }\n        },\n        legend: {\n          text: {\n            fill: colors.grey[100]\n          }\n        },\n        ticks: {\n          line: {\n            stroke: colors.grey[100],\n            strokeWidth: 1\n          },\n          text: {\n            fill: colors.grey[100]\n          }\n        }\n      },\n      legends: {\n        text: {\n          fill: colors.grey[100]\n        }\n      }\n    },\n    keys: [\"tb.voltagelevel\"],\n    indexBy: \"tb.ckt\",\n    margin: {\n      top: 50,\n      right: 130,\n      bottom: 50,\n      left: 60\n    },\n    padding: 0.3,\n    valueScale: {\n      type: \"linear\"\n    },\n    indexScale: {\n      type: \"band\",\n      round: true\n    },\n    colors: {\n      scheme: \"nivo\"\n    },\n    defs: [{\n      id: \"dots\",\n      type: \"patternDots\",\n      background: \"inherit\",\n      color: \"#38bcb2\",\n      size: 4,\n      padding: 1,\n      stagger: true\n    }, {\n      id: \"lines\",\n      type: \"patternLines\",\n      background: \"inherit\",\n      color: \"#eed312\",\n      rotation: -45,\n      lineWidth: 6,\n      spacing: 10\n    }],\n    borderColor: {\n      from: \"color\",\n      modifiers: [[\"darker\", \"1.6\"]]\n    },\n    axisTop: null,\n    axisRight: null,\n    axisBottom: {\n      tickSize: 5,\n      tickPadding: 5,\n      tickRotation: 0,\n      legend: isDashboard ? undefined : \"Circle\",\n      // changed\n      legendPosition: \"middle\",\n      legendOffset: 32\n    },\n    axisLeft: {\n      tickSize: 5,\n      tickPadding: 5,\n      tickRotation: 0,\n      legend: isDashboard ? undefined : \"Tripping Count\",\n      // changed\n      legendPosition: \"middle\",\n      legendOffset: -40\n    },\n    enableLabel: false,\n    labelSkipWidth: 12,\n    labelSkipHeight: 12,\n    labelTextColor: {\n      from: \"color\",\n      modifiers: [[\"darker\", 1.6]]\n    },\n    legends: [{\n      dataFrom: \"keys\",\n      anchor: \"bottom-right\",\n      direction: \"column\",\n      justify: false,\n      translateX: 120,\n      translateY: 0,\n      itemsSpacing: 2,\n      itemWidth: 100,\n      itemHeight: 20,\n      itemDirection: \"left-to-right\",\n      itemOpacity: 0.85,\n      symbolSize: 20,\n      effects: [{\n        on: \"hover\",\n        style: {\n          itemOpacity: 1\n        }\n      }]\n    }],\n    role: \"application\",\n    barAriaLabel: function (e) {\n      return e.id + \": \" + e.formattedValue + \" in country: \" + e.indexValue;\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(BarChart, \"99OgTS0at2VBUsklcO+MdLNiomw=\", false, function () {\n  return [useTheme];\n});\n_c = BarChart;\nexport default BarChart;\nvar _c;\n$RefreshReg$(_c, \"BarChart\");","map":{"version":3,"names":["useTheme","ResponsiveBar","tokens","mockData","data","useEffect","useState","BarChart","isDashboard","theme","colors","palette","mode","tbs","settbs","gettb","response","fetch","jsonData","json","err","console","error","message","log","axis","domain","line","stroke","grey","legend","text","fill","ticks","strokeWidth","legends","top","right","bottom","left","type","round","scheme","id","background","color","size","padding","stagger","rotation","lineWidth","spacing","from","modifiers","tickSize","tickPadding","tickRotation","undefined","legendPosition","legendOffset","dataFrom","anchor","direction","justify","translateX","translateY","itemsSpacing","itemWidth","itemHeight","itemDirection","itemOpacity","symbolSize","effects","on","style","e","formattedValue","indexValue"],"sources":["C:/Users/20338783/Desktop/React/hvpnl-dash/hvpnl/src/components/BarChart.jsx"],"sourcesContent":["import { useTheme } from \"@mui/material\";\r\nimport { ResponsiveBar } from \"@nivo/bar\";\r\nimport { tokens } from \"../theme\";\r\nimport { mockData as data } from \"../data/mockData\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nconst BarChart = ({ isDashboard = false }) => {\r\n  const theme = useTheme();\r\n  const colors = tokens(theme.palette.mode);\r\n\r\n  const[tbs,settbs] = useState([]);\r\n  const gettb=async () => {\r\n    try {\r\n      const response = await fetch(\"http://localhost:3001/tb\");\r\n      const jsonData = await response.json();\r\n\r\n      settbs(jsonData);\r\n    }catch(err){\r\n      console.error(err.message);\r\n    }\r\n  }\r\n\r\n  useEffect(()=>{\r\n  gettb();\r\n},[]);\r\nconsole.log(tbs);\r\n\r\n  return (\r\n    <ResponsiveBar\r\n      data={data}\r\n      theme={{\r\n        // added\r\n        axis: {\r\n          domain: {\r\n            line: {\r\n              stroke: colors.grey[100],\r\n            },\r\n          },\r\n          legend: {\r\n            text: {\r\n              fill: colors.grey[100],\r\n            },\r\n          },\r\n          ticks: {\r\n            line: {\r\n              stroke: colors.grey[100],\r\n              strokeWidth: 1,\r\n            },\r\n            text: {\r\n              fill: colors.grey[100],\r\n            },\r\n          },\r\n        },\r\n        legends: {\r\n          text: {\r\n            fill: colors.grey[100],\r\n          },\r\n        },\r\n      }}\r\n    keys={[\"tb.voltagelevel\"]}\r\n      indexBy=\"tb.ckt\"\r\n      margin={{ top: 50, right: 130, bottom: 50, left: 60 }}\r\n      padding={0.3}\r\n      valueScale={{ type: \"linear\" }}\r\n      indexScale={{ type: \"band\", round: true }}\r\n      colors={{ scheme: \"nivo\" }}\r\n      defs={[\r\n        {\r\n          id: \"dots\",\r\n          type: \"patternDots\",\r\n          background: \"inherit\",\r\n          color: \"#38bcb2\",\r\n          size: 4,\r\n          padding: 1,\r\n          stagger: true,\r\n        },\r\n        {\r\n          id: \"lines\",\r\n          type: \"patternLines\",\r\n          background: \"inherit\",\r\n          color: \"#eed312\",\r\n          rotation: -45,\r\n          lineWidth: 6,\r\n          spacing: 10,\r\n        },\r\n      ]}\r\n      borderColor={{\r\n        from: \"color\",\r\n        modifiers: [[\"darker\", \"1.6\"]],\r\n      }}\r\n      axisTop={null}\r\n      axisRight={null}\r\n      axisBottom={{\r\n        tickSize: 5,\r\n        tickPadding: 5,\r\n        tickRotation: 0,\r\n        legend: isDashboard ? undefined : \"Circle\", // changed\r\n        legendPosition: \"middle\",\r\n        legendOffset: 32,\r\n      }}\r\n      axisLeft={{\r\n        tickSize: 5,\r\n        tickPadding: 5,\r\n        tickRotation: 0,\r\n        legend: isDashboard ? undefined : \"Tripping Count\", // changed\r\n        legendPosition: \"middle\",\r\n        legendOffset: -40,\r\n      }}\r\n      enableLabel={false}\r\n      labelSkipWidth={12}\r\n      labelSkipHeight={12}\r\n      labelTextColor={{\r\n        from: \"color\",\r\n        modifiers: [[\"darker\", 1.6]],\r\n      }}\r\n      legends={[\r\n        {\r\n          dataFrom: \"keys\",\r\n          anchor: \"bottom-right\",\r\n          direction: \"column\",\r\n          justify: false,\r\n          translateX: 120,\r\n          translateY: 0,\r\n          itemsSpacing: 2,\r\n          itemWidth: 100,\r\n          itemHeight: 20,\r\n          itemDirection: \"left-to-right\",\r\n          itemOpacity: 0.85,\r\n          symbolSize: 20,\r\n          effects: [\r\n            {\r\n              on: \"hover\",\r\n              style: {\r\n                itemOpacity: 1,\r\n              },\r\n            },\r\n          ],\r\n        },\r\n      ]}\r\n      role=\"application\"\r\n      barAriaLabel={function (e) {\r\n        return e.id + \": \" + e.formattedValue + \" in country: \" + e.indexValue;\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default BarChart;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}