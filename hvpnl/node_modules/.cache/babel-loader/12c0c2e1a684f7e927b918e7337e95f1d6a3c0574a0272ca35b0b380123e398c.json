{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\20338783\\\\Desktop\\\\React\\\\hvpnl-dash\\\\hvpnl\\\\src\\\\scenes\\\\damagedTransformer\\\\index.jsx\",\n  _s = $RefreshSig$();\nimport { Box } from \"@mui/material\";\nimport { DataGrid, GridToolbar } from \"@mui/x-data-grid\";\nimport { tokens } from \"../../theme\";\nimport Header from \"../../components/Header\";\nimport { useTheme } from \"@mui/material\";\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  field: \"voltagelevel\",\n  headerName: \"Voltage Level (KV)\",\n  flex: 2.5\n}, {\n  field: \"ckt\",\n  headerName: \"Circuit (KM)\",\n  flex: 2.5\n}, {\n  field: \"nolines\",\n  headerName: \"No of Lines\",\n  flex: 2.5\n}];\nconst DamagedTransformer = () => {\n  _s();\n  const [tableData, setTableData] = useState([]);\n  useEffect(() => {\n    fetch(\"http://localhost:3001/tb\").then(data => data.json()).then(data => setTableData(data));\n    console.log(data);\n  });\n  return /*#__PURE__*/_jsxDEV(Box, {\n    m: \"20px\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      title: \"DAMAGED TRANSFORMER \",\n      subtitle: \"Damaged Transformer  Details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      height: \"65vh\",\n      width: \"auto\",\n      flex: \"auto\",\n      alignItems: \"center\",\n      alignContent: \"center\",\n      justifyContent: \"center\",\n      justifyItems: \"center\",\n      sx: {\n        \"& .MuiDataGrid-root\": {\n          border: \"none\",\n          justifyContent: \"center\"\n        },\n        \"& .MuiDataGrid-cell\": {\n          borderBottom: \"none\"\n        },\n        \"& .name-column--cell\": {\n          color: colors.greenAccent[300]\n        },\n        \"& .MuiDataGrid-columnHeaders\": {\n          backgroundColor: colors.blueAccent[700],\n          borderBottom: \"none\"\n        },\n        \"& .MuiDataGrid-virtualScroller\": {\n          backgroundColor: colors.primary[400]\n        },\n        \"& .MuiDataGrid-footerContainer\": {\n          borderTop: \"none\",\n          backgroundColor: colors.blueAccent[700]\n        },\n        \"& .MuiCheckbox-root\": {\n          color: `${colors.greenAccent[200]} !important`\n        },\n        \"& .MuiDataGrid-toolbarContainer .MuiButton-text\": {\n          color: `${colors.grey[100]} !important`\n        }\n      },\n      children: /*#__PURE__*/_jsxDEV(DataGrid, {\n        rows: tableData,\n        columns: columns,\n        components: {\n          Toolbar: GridToolbar\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(DamagedTransformer, \"Fa245Lskiz/s3UUVEKsyJDEf5b4=\");\n_c = DamagedTransformer;\nexport default DamagedTransformer;\nvar _c;\n$RefreshReg$(_c, \"DamagedTransformer\");","map":{"version":3,"names":["Box","DataGrid","GridToolbar","tokens","Header","useTheme","useState","useEffect","columns","field","headerName","flex","DamagedTransformer","tableData","setTableData","fetch","then","data","json","console","log","border","justifyContent","borderBottom","color","colors","greenAccent","backgroundColor","blueAccent","primary","borderTop","grey","Toolbar"],"sources":["C:/Users/20338783/Desktop/React/hvpnl-dash/hvpnl/src/scenes/damagedTransformer/index.jsx"],"sourcesContent":["import { Box } from \"@mui/material\";\r\nimport { DataGrid, GridToolbar } from \"@mui/x-data-grid\";\r\nimport { tokens } from \"../../theme\";\r\nimport Header from \"../../components/Header\";\r\nimport { useTheme } from \"@mui/material\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\n\r\nconst columns = [\r\n  { field: \"voltagelevel\", headerName: \"Voltage Level (KV)\", flex: 2.5 },\r\n  { field: \"ckt\", headerName: \"Circuit (KM)\" , flex:2.5},\r\n  {\r\n    field: \"nolines\",\r\n    headerName: \"No of Lines\",\r\n    flex: 2.5,\r\n  }, \r\n];\r\n\r\n\r\nconst DamagedTransformer = () => {\r\n\r\n  const[tableData,setTableData] = useState([]);\r\n  useEffect(()=> {\r\n    fetch(\"http://localhost:3001/tb\")\r\n    .then((data) => data.json())\r\n    .then((data) => setTableData(data))\r\n    console.log(data)\r\n  })\r\n\r\n \r\n\r\n  return (\r\n    <Box m=\"20px\">\r\n      <Header\r\n        title=\"DAMAGED TRANSFORMER \"\r\n        subtitle=\"Damaged Transformer  Details\"\r\n      />\r\n      \r\n      <Box\r\n          height=\"65vh\"\r\n          width=\"auto\"\r\n          flex=\"auto\"\r\n          alignItems=\"center\"\r\n          alignContent=\"center\"\r\n          justifyContent=\"center\"\r\n          justifyItems=\"center\"\r\n          sx={{\r\n            \"& .MuiDataGrid-root\": {\r\n              border: \"none\",  justifyContent:\"center\",\r\n              \r\n            },\r\n            \"& .MuiDataGrid-cell\": {\r\n              borderBottom: \"none\", \r\n              \r\n            },\r\n            \"& .name-column--cell\": {\r\n              color: colors.greenAccent[300],\r\n            },\r\n            \"& .MuiDataGrid-columnHeaders\": {\r\n              backgroundColor: colors.blueAccent[700],\r\n              borderBottom: \"none\",\r\n            },\r\n            \"& .MuiDataGrid-virtualScroller\": {\r\n              backgroundColor: colors.primary[400],\r\n            },\r\n            \"& .MuiDataGrid-footerContainer\": {\r\n              borderTop: \"none\",\r\n              backgroundColor: colors.blueAccent[700],\r\n            },\r\n            \"& .MuiCheckbox-root\": {\r\n              color: `${colors.greenAccent[200]} !important`,\r\n              \r\n            },\r\n            \"& .MuiDataGrid-toolbarContainer .MuiButton-text\": {\r\n              color: `${colors.grey[100]} !important`,\r\n              \r\n            },\r\n          }}\r\n      >\r\n        <DataGrid\r\n          rows={tableData}\r\n          columns={columns}\r\n          components={{ Toolbar: GridToolbar }}\r\n          \r\n        />\r\n        {/* </Box>\r\n      <Box m=\"10px\">\r\n      <Header title=\"DAMAGED TRANSFORMERS\" subtitle=\"Analytics for Damaged Transformers\"/>\r\n      <Box height=\"75vh\">\r\n        <Box  display=\"grid\"\r\n            gridTemplateColumns=\"repeat(12, 1fr)\"\r\n            gridAutoRows=\"440px\"\r\n            gap=\"10px\">\r\n\r\n        <Box\r\n        gridColumn=\"span 6\"\r\n        display=\"flex\"\r\n        alignItems=\"center\"\r\n        justifyContent=\"center\"\r\n    >\r\n          <ResponsiveBar\r\n        data={mockDataDamagetrans}\r\n        theme={{\r\n          // added\r\n          axis: {\r\n            domain: {\r\n              line: {\r\n                stroke: colors.grey[100],\r\n              },\r\n            },\r\n            legend: {\r\n              text: {\r\n                fill: colors.grey[100],\r\n              },\r\n            },\r\n            ticks: {\r\n              line: {\r\n                stroke: colors.grey[100],\r\n                strokeWidth: 1,\r\n              },\r\n              text: {\r\n                fill: colors.grey[100],\r\n              },\r\n            },\r\n          },\r\n          legends: {\r\n            text: {\r\n              fill: colors.grey[100],\r\n            },\r\n          },\r\n        }}\r\n        keys={[\"TotalOutageT\"]}\r\n        indexBy=\"id\"\r\n        margin={{ top: 50, right: 130, bottom: 50, left: 60 }}\r\n        padding={0.3}\r\n        valueScale={{ type: \"linear\" }}\r\n        indexScale={{ type: \"band\", round: true }}\r\n        colors={{ scheme: \"nivo\" }}\r\n        defs={[\r\n          {\r\n            id: \"dots\",\r\n            type: \"patternDots\",\r\n            background: \"inherit\",\r\n            color: \"#38bcb2\",\r\n            size: 4,\r\n            padding: 1,\r\n            stagger: true,\r\n          },\r\n          {\r\n            id: \"lines\",\r\n            type: \"patternLines\",\r\n            background: \"inherit\",\r\n            color: \"#eed312\",\r\n            rotation: -45,\r\n            lineWidth: 6,\r\n            spacing: 10,\r\n          },\r\n        ]}\r\n        borderColor={{\r\n          from: \"color\",\r\n          modifiers: [[\"darker\", \"1.6\"]],\r\n        }}\r\n        axisTop={null}\r\n        axisRight={null}\r\n        axisBottom={{\r\n          tickSize: 5,\r\n          tickPadding: 5,\r\n          tickRotation: 0,\r\n          legend: isDashboard ? undefined : \"Circle\", // changed\r\n          legendPosition: \"middle\",\r\n          legendOffset: 32,\r\n        }}\r\n        axisLeft={{\r\n          tickSize: 5,\r\n          tickPadding: 5,\r\n          tickRotation: 0,\r\n          legend: isDashboard ? undefined : \"Damage Rate\", // changed\r\n          legendPosition: \"middle\",\r\n          legendOffset: -40,\r\n        }}\r\n        enableLabel={false}\r\n        labelSkipWidth={12}\r\n        labelSkipHeight={12}\r\n        labelTextColor={{\r\n          from: \"color\",\r\n          modifiers: [[\"darker\", 1.6]],\r\n        }}\r\n        legends={[\r\n          {\r\n            dataFrom: \"keys\",\r\n            anchor: \"bottom-right\",\r\n            direction: \"column\",\r\n            justify: false,\r\n            translateX: 120,\r\n            translateY: 0,\r\n            itemsSpacing: 2,\r\n            itemWidth: 100,\r\n            itemHeight: 20,\r\n            itemDirection: \"left-to-right\",\r\n            itemOpacity: 0.85,\r\n            symbolSize: 20,\r\n            effects: [\r\n              {\r\n                on: \"hover\",\r\n                style: {\r\n                  itemOpacity: 1,\r\n                },\r\n              },\r\n            ],\r\n          },\r\n        ]}\r\n        role=\"application\"\r\n        barAriaLabel={function (e) {\r\n          return e.id + \": \" + e.formattedValue + \" in country: \" + e.indexValue;\r\n        }}\r\n      />\r\n\r\n          </Box>\r\n          </Box>\r\n        </Box> */}\r\n      </Box>\r\n      </Box>\r\n  );\r\n};\r\n\r\nexport default DamagedTransformer;\r\n"],"mappings":";;AAAA,SAASA,GAAG,QAAQ,eAAe;AACnC,SAASC,QAAQ,EAAEC,WAAW,QAAQ,kBAAkB;AACxD,SAASC,MAAM,QAAQ,aAAa;AACpC,OAAOC,MAAM,MAAM,yBAAyB;AAC5C,SAASC,QAAQ,QAAQ,eAAe;AACxC,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC;AAG5C,MAAMC,OAAO,GAAG,CACd;EAAEC,KAAK,EAAE,cAAc;EAAEC,UAAU,EAAE,oBAAoB;EAAEC,IAAI,EAAE;AAAI,CAAC,EACtE;EAAEF,KAAK,EAAE,KAAK;EAAEC,UAAU,EAAE,cAAc;EAAGC,IAAI,EAAC;AAAG,CAAC,EACtD;EACEF,KAAK,EAAE,SAAS;EAChBC,UAAU,EAAE,aAAa;EACzBC,IAAI,EAAE;AACR,CAAC,CACF;AAGD,MAAMC,kBAAkB,GAAG,MAAM;EAAA;EAE/B,MAAK,CAACC,SAAS,EAACC,YAAY,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5CC,SAAS,CAAC,MAAK;IACbQ,KAAK,CAAC,0BAA0B,CAAC,CAChCC,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACC,IAAI,EAAE,CAAC,CAC3BF,IAAI,CAAEC,IAAI,IAAKH,YAAY,CAACG,IAAI,CAAC,CAAC;IACnCE,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;EACnB,CAAC,CAAC;EAIF,oBACE,QAAC,GAAG;IAAC,CAAC,EAAC,MAAM;IAAA,wBACX,QAAC,MAAM;MACL,KAAK,EAAC,sBAAsB;MAC5B,QAAQ,EAAC;IAA8B;MAAA;MAAA;MAAA;IAAA,QACvC,eAEF,QAAC,GAAG;MACA,MAAM,EAAC,MAAM;MACb,KAAK,EAAC,MAAM;MACZ,IAAI,EAAC,MAAM;MACX,UAAU,EAAC,QAAQ;MACnB,YAAY,EAAC,QAAQ;MACrB,cAAc,EAAC,QAAQ;MACvB,YAAY,EAAC,QAAQ;MACrB,EAAE,EAAE;QACF,qBAAqB,EAAE;UACrBI,MAAM,EAAE,MAAM;UAAGC,cAAc,EAAC;QAElC,CAAC;QACD,qBAAqB,EAAE;UACrBC,YAAY,EAAE;QAEhB,CAAC;QACD,sBAAsB,EAAE;UACtBC,KAAK,EAAEC,MAAM,CAACC,WAAW,CAAC,GAAG;QAC/B,CAAC;QACD,8BAA8B,EAAE;UAC9BC,eAAe,EAAEF,MAAM,CAACG,UAAU,CAAC,GAAG,CAAC;UACvCL,YAAY,EAAE;QAChB,CAAC;QACD,gCAAgC,EAAE;UAChCI,eAAe,EAAEF,MAAM,CAACI,OAAO,CAAC,GAAG;QACrC,CAAC;QACD,gCAAgC,EAAE;UAChCC,SAAS,EAAE,MAAM;UACjBH,eAAe,EAAEF,MAAM,CAACG,UAAU,CAAC,GAAG;QACxC,CAAC;QACD,qBAAqB,EAAE;UACrBJ,KAAK,EAAG,GAAEC,MAAM,CAACC,WAAW,CAAC,GAAG,CAAE;QAEpC,CAAC;QACD,iDAAiD,EAAE;UACjDF,KAAK,EAAG,GAAEC,MAAM,CAACM,IAAI,CAAC,GAAG,CAAE;QAE7B;MACF,CAAE;MAAA,uBAEJ,QAAC,QAAQ;QACP,IAAI,EAAElB,SAAU;QAChB,OAAO,EAAEL,OAAQ;QACjB,UAAU,EAAE;UAAEwB,OAAO,EAAE9B;QAAY;MAAE;QAAA;QAAA;QAAA;MAAA;IAErC;MAAA;MAAA;MAAA;IAAA,QAwIE;EAAA;IAAA;IAAA;IAAA;EAAA,QACA;AAEZ,CAAC;AAAC,GA5MIU,kBAAkB;AAAA,KAAlBA,kBAAkB;AA8MxB,eAAeA,kBAAkB;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}