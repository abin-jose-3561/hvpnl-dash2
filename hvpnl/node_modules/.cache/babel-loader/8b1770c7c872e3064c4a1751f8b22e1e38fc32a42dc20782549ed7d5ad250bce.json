{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\20338783\\\\Desktop\\\\React\\\\hvpnl-dash\\\\hvpnl\\\\src\\\\scenes\\\\trippingbreakdown\\\\index.jsx\",\n  _s = $RefreshSig$();\nimport { Box } from \"@mui/material\";\nimport { DataGrid, GridToolbar } from \"@mui/x-data-grid\";\nimport { tokens } from \"../../theme\";\nimport { mockTransLine } from \"../../data/mockData\";\nimport Header from \"../../components/Header\";\nimport { useTheme } from \"@mui/material\";\nimport { Fragment, useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TrippingBreakdown = () => {\n  _s();\n  const [tbs, settbs] = useState([]);\n  const gettb = async () => {\n    try {\n      const response = await fetch(\"http://localhost:3001/tb\");\n      const jsonData = await response.json();\n      settbs(jsonData);\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n  useEffect(() => {\n    gettb();\n  }, []);\n  console.log(tbs);\n  const theme = useTheme();\n  const colors = tokens(theme.palette.mode);\n\n  // const columns = [\n  //   { field: \"id\", headerName: \"Voltage Level\", flex: 2.5 },\n  //   { field: \"ckt\", headerName: \"Total CKT Km\" , flex:2.5},\n  //   {\n  //     field: \"nolines\",\n  //     headerName: \"Total No Of Lines\",\n  //     flex: 2.5,\n  //     cellClassName: \"name-column--cell\",\n  //   },\n  // ];\n\n  // const rows= tbs.map(tb=>([\n  //   {id: tb.voltagelevel,\n  //   ckt: tb.ckt,\n  //   nolines: tb.nolines}\n  // ]\n  // ))\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    m: \"20px\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      title: \"TRIPPING BREAKDOWN\",\n      subtitle: \"Trip Breakdown Details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"table\", {\n        class: \"table mt-5 text-center\",\n        children: /*#__PURE__*/_jsxDEV(\"thread\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Voltage Level (KV)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Total Circuit KM\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Number of Lines\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(TrippingBreakdown, \"OxYSQbBb4bXbNkYyXX1vM/bX9OM=\", false, function () {\n  return [useTheme];\n});\n_c = TrippingBreakdown;\nexport default TrippingBreakdown;\nvar _c;\n$RefreshReg$(_c, \"TrippingBreakdown\");","map":{"version":3,"names":["Box","DataGrid","GridToolbar","tokens","mockTransLine","Header","useTheme","Fragment","useEffect","useState","TrippingBreakdown","tbs","settbs","gettb","response","fetch","jsonData","json","err","console","error","message","log","theme","colors","palette","mode"],"sources":["C:/Users/20338783/Desktop/React/hvpnl-dash/hvpnl/src/scenes/trippingbreakdown/index.jsx"],"sourcesContent":["import { Box } from \"@mui/material\";\r\nimport { DataGrid, GridToolbar } from \"@mui/x-data-grid\";\r\nimport { tokens } from \"../../theme\";\r\nimport { mockTransLine } from \"../../data/mockData\";\r\nimport Header from \"../../components/Header\";\r\nimport { useTheme } from \"@mui/material\";\r\nimport { Fragment, useEffect, useState } from \"react\";\r\n\r\n\r\nconst TrippingBreakdown = () => {\r\n  const[tbs,settbs] = useState([]);\r\n\r\n  const gettb=async () => {\r\n    try {\r\n      const response = await fetch(\"http://localhost:3001/tb\");\r\n      const jsonData = await response.json();\r\n\r\n      settbs(jsonData);\r\n    }catch(err){\r\n      console.error(err.message);\r\n    }\r\n  }\r\n\r\n  useEffect(()=>{\r\n  gettb();\r\n},[]);\r\nconsole.log(tbs);\r\n\r\n  const theme = useTheme();\r\n  const colors = tokens(theme.palette.mode);\r\n  \r\n\r\n  // const columns = [\r\n  //   { field: \"id\", headerName: \"Voltage Level\", flex: 2.5 },\r\n  //   { field: \"ckt\", headerName: \"Total CKT Km\" , flex:2.5},\r\n  //   {\r\n  //     field: \"nolines\",\r\n  //     headerName: \"Total No Of Lines\",\r\n  //     flex: 2.5,\r\n  //     cellClassName: \"name-column--cell\",\r\n  //   },\r\n  // ];\r\n\r\n  // const rows= tbs.map(tb=>([\r\n  //   {id: tb.voltagelevel,\r\n  //   ckt: tb.ckt,\r\n  //   nolines: tb.nolines}\r\n  // ]\r\n  // ))\r\n\r\n  return (\r\n    <Box m=\"20px\">\r\n      <Header\r\n        title=\"TRIPPING BREAKDOWN\"\r\n        subtitle=\"Trip Breakdown Details\"\r\n      />\r\n      <Fragment>\r\n        {\" \"}\r\n        <table class=\"table mt-5 text-center\">\r\n          <thread>\r\n            <tr>\r\n              <th>Voltage Level (KV)</th>\r\n              <th>Total Circuit KM</th>\r\n              <th>Number of Lines</th>\r\n            </tr>\r\n          </thread>\r\n        </table>\r\n      </Fragment>\r\n      {/* <Box\r\n        m=\"40px 0 0 0\"\r\n        height=\"75vh\"\r\n        sx={{\r\n          \"& .MuiDataGrid-root\": {\r\n            border: \"none\",\r\n          },\r\n          \"& .MuiDataGrid-cell\": {\r\n            borderBottom: \"none\",\r\n          },\r\n          \"& .name-column--cell\": {\r\n            color: colors.greenAccent[300],\r\n          },\r\n          \"& .MuiDataGrid-columnHeaders\": {\r\n            backgroundColor: colors.blueAccent[700],\r\n            borderBottom: \"none\",\r\n          },\r\n          \"& .MuiDataGrid-virtualScroller\": {\r\n            backgroundColor: colors.primary[400],\r\n          },\r\n          \"& .MuiDataGrid-footerContainer\": {\r\n            borderTop: \"none\",\r\n            backgroundColor: colors.blueAccent[700],\r\n          },\r\n          \"& .MuiCheckbox-root\": {\r\n            color: `${colors.greenAccent[200]} !important`,\r\n          },\r\n          \"& .MuiDataGrid-toolbarContainer .MuiButton-text\": {\r\n            color: `${colors.grey[100]} !important`,\r\n          },\r\n        }}\r\n      >\r\n        <DataGrid\r\n          rows={rows}\r\n          columns={columns}\r\n          components={{ Toolbar: GridToolbar }}\r\n        />\r\n      </Box> */}\r\n    </Box>\r\n    \r\n  );\r\n};\r\n\r\nexport default TrippingBreakdown;"],"mappings":";;AAAA,SAASA,GAAG,QAAQ,eAAe;AACnC,SAASC,QAAQ,EAAEC,WAAW,QAAQ,kBAAkB;AACxD,SAASC,MAAM,QAAQ,aAAa;AACpC,SAASC,aAAa,QAAQ,qBAAqB;AACnD,OAAOC,MAAM,MAAM,yBAAyB;AAC5C,SAASC,QAAQ,QAAQ,eAAe;AACxC,SAASC,QAAQ,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC;AAGtD,MAAMC,iBAAiB,GAAG,MAAM;EAAA;EAC9B,MAAK,CAACC,GAAG,EAACC,MAAM,CAAC,GAAGH,QAAQ,CAAC,EAAE,CAAC;EAEhC,MAAMI,KAAK,GAAC,YAAY;IACtB,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,0BAA0B,CAAC;MACxD,MAAMC,QAAQ,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAE;MAEtCL,MAAM,CAACI,QAAQ,CAAC;IAClB,CAAC,QAAME,GAAG,EAAC;MACTC,OAAO,CAACC,KAAK,CAACF,GAAG,CAACG,OAAO,CAAC;IAC5B;EACF,CAAC;EAEDb,SAAS,CAAC,MAAI;IACdK,KAAK,EAAE;EACT,CAAC,EAAC,EAAE,CAAC;EACLM,OAAO,CAACG,GAAG,CAACX,GAAG,CAAC;EAEd,MAAMY,KAAK,GAAGjB,QAAQ,EAAE;EACxB,MAAMkB,MAAM,GAAGrB,MAAM,CAACoB,KAAK,CAACE,OAAO,CAACC,IAAI,CAAC;;EAGzC;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACE,QAAC,GAAG;IAAC,CAAC,EAAC,MAAM;IAAA,wBACX,QAAC,MAAM;MACL,KAAK,EAAC,oBAAoB;MAC1B,QAAQ,EAAC;IAAwB;MAAA;MAAA;MAAA;IAAA,QACjC,eACF,QAAC,QAAQ;MAAA,WACN,GAAG,eACJ;QAAO,KAAK,EAAC,wBAAwB;QAAA,uBACnC;UAAA,uBACE;YAAA,wBACE;cAAA,UAAI;YAAkB;cAAA;cAAA;cAAA;YAAA,QAAK,eAC3B;cAAA,UAAI;YAAgB;cAAA;cAAA;cAAA;YAAA,QAAK,eACzB;cAAA,UAAI;YAAe;cAAA;cAAA;cAAA;YAAA,QAAK;UAAA;YAAA;YAAA;YAAA;UAAA;QACrB;UAAA;UAAA;UAAA;QAAA;MACE;QAAA;QAAA;QAAA;MAAA,QACH;IAAA;MAAA;MAAA;MAAA;IAAA,QACC;EAAA;IAAA;IAAA;IAAA;EAAA,QAuCP;AAGV,CAAC;AAAC,GApGIhB,iBAAiB;EAAA,QAmBPJ,QAAQ;AAAA;AAAA,KAnBlBI,iBAAiB;AAsGvB,eAAeA,iBAAiB;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}